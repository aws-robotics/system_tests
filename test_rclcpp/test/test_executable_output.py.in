# generated from test_rclcpp/test/test_executable_output.py.in
# generated code does not contain a copyright notice

import unittest

from apex_rostest import post_shutdown_test
from apex_rostest.asserts import assertInStdout
from launch import LaunchDescription
from launch.actions import ExecuteProcess
from launch_testing.output import create_output_lines_filter


def generate_test_description(ready_fn):
    launch_description = LaunchDescription([
        ExecuteProcess(
            cmd=['@TEST_EXECUTABLE@'],
            name='@TEST_EXECUTABLE_NAME@',
            output='screen'
        )
    ])
    ready_fn()
    return launch_description


class ShutdownTest(unittest.TestCase):

    def test_for_shutdown_output(self):
        trigger_shutdown_output = '@TEST_EXECUTABLE_TRIGGER_SHUTDOWN_OUTPUT@.txt'
        with open(trigger_shutdown_output, 'r') as f:
            self.proc_output.assertWaitFor(
                msg=f.read(), node='@TEST_EXECUTABLE_NAME@',
                timeout=10, filter_output=create_output_lines_filter(
                    filtered_rmw_implementation='@rmw_implementation@'
                )
            )


@post_shutdown_test()
class PostShutdownTest(unittest.TestCase):

    def test_full_output(self):
        expected_output = '@TEST_EXECUTABLE_EXPECTED_OUTPUT@.txt'
        with open(expected_output, 'r') as f:
            assertInStdout(
                self.proc_output, msg=f.read(),
                node='@TEST_EXECUTABLE_NAME@',
                filter_output=create_output_lines_filter(
                    filtered_rmw_implementation='@rmw_implementation@'
                )
            )
